/*基本样式*/
.wrapper {
    padding: 15px 20px;
    border: 1px dashed #ff6c60;
}

.left {
    width: 120px;
    border: 5px solid #ddd;
}

.right {
    margin-left: 20px;
    border: 5px solid #ddd;
}
/*双inline-block方案
缺点: 
需要知道左侧盒子的宽度，两个盒子的距离，还要设置各个元素的box-sizing 
需要消除空格字符的影响 
需要设置vertical-align: top满足顶端对齐。
*/
.wrapper-inline-block {
    box-sizing: content-box;
    font-size: 0; /*消除空格的影响*/
}
.wrapper-inline-block .left,
.wrapper-inline-block .right {
    display: inline-block;
    vertical-align: top; /*顶端对齐*/
    font-size: 14px;
    box-sizing: border-box;
}
.wrapper-inline-block .right {
    width: calc(100% - 140px);
}
/*双float方案
缺点:
需要知道左侧盒子的宽度，两个盒子的距离，还要设置各个元素的box-sizing。
父元素需要清除浮动。
*/
.wrapper-double-float {
    overflow: auto; /*清除浮动*/
    box-sizing: content-box;
}
.wrapper-double-float .left,
.wrapper-double-float .right {
    float: left;
    box-sizing: border-box;
}
.wrapper-double-float .right {
    width: calc(100% - 140px);
}
/*float+margin-left方案
缺点： 
需要清除浮动 
需要计算右侧盒子的margin-left
*/
.wrapper-float {
    overflow: hidden; /*清除浮动*/
}
.wrapper-float .left {
    float: left;
}
.wrapper-float .right {
    margin-left: 150px; /*120+20+5+5*/
}
/*absolute+margin-left方案
缺点:
使用了绝对定位，若是用在某个div中，需要更改父容器的position。
没有清除浮动的方法，若左侧盒子高于右侧盒子，就会超出父容器的高度。因此只能通过设置父容器的min-height来放置这种情况。
*/
.wrapper-absolute {
    min-height: 200px;
}
.wrapper-absolute .left {
    position: absolute;
}
.wrapper-absolute .right {
    margin-left: 150px; /*120+20+5+5*/
}
/*float+BFC方案
缺点: 
父元素需要清除浮动
*/
.wrapper-float-bfc {
    overflow: auto;
}
.wrapper-float-bfc .left {
    float: left;
    margin-right: 20px;
}
.wrapper-float-bfc .right {
    margin-left: 0;
    overflow: auto;
}
/*flex方案*/
.wrapper-flex {
    display: flex;
    align-items: flex-start;
}
.wrapper-flex .left {
    flex: 0 0 auto;
}
.wrapper-flex .right {
    flex: 1 1 auto;
}
/*grid方案*/
.wrapper-grid {
    display: grid;
    grid-template-columns: 120px 1fr;
    align-items: start;
}
.wrapper-grid .left,
.wrapper-grid .right {
    box-sizing: border-box;
}
.wrapper-grid .left {
    grid-column: 1;
}
.wrapper-grid .right {
    grid-column: 2;
}